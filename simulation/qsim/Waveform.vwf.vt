// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "12/21/2017 18:01:56"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          HexpointThermostat
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module HexpointThermostat_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
reg controlsActive;
reg Dec;
reg Dout;
reg fbctestclk;
reg fbctestrestart;
reg hiTrueSetDisp;
reg Inc;
reg Initialize;
reg NightNOTday;
reg NightNOTday18;
reg passiveNOTactive;
reg passiveNOTactive19;
reg re;
// wires                                               
wire Cool;
wire CS;
wire fbc0;
wire fbc1;
wire fbc2;
wire fbc3;
wire fbc4;
wire Heat;
wire Mof32;
wire SCL;

// assign statements (if any)                          
HexpointThermostat i1 (
// port map - connection between master ports and signals/registers   
	.CLK(CLK),
	.controlsActive(controlsActive),
	.Cool(Cool),
	.CS(CS),
	.Dec(Dec),
	.Dout(Dout),
	.fbc0(fbc0),
	.fbc1(fbc1),
	.fbc2(fbc2),
	.fbc3(fbc3),
	.fbc4(fbc4),
	.fbctestclk(fbctestclk),
	.fbctestrestart(fbctestrestart),
	.Heat(Heat),
	.hiTrueSetDisp(hiTrueSetDisp),
	.Inc(Inc),
	.Initialize(Initialize),
	.Mof32(Mof32),
	.NightNOTday(NightNOTday),
	.NightNOTday18(NightNOTday18),
	.passiveNOTactive(passiveNOTactive),
	.passiveNOTactive19(passiveNOTactive19),
	.re(re),
	.SCL(SCL)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #5000 1'b1;
	#5000;
end 

// re
initial
begin
	re = 1'b1;
	re = #10000 1'b0;
end 
endmodule

